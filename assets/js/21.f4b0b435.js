(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{466:function(a,e,s){a.exports=s.p+"assets/img/10.a4e89586.png"},467:function(a,e,s){a.exports=s.p+"assets/img/11.184cd188.png"},468:function(a,e,s){a.exports=s.p+"assets/img/12.0f4b7451.png"},469:function(a,e,s){a.exports=s.p+"assets/img/13.476a283a.png"},718:function(a,e,s){"use strict";s.r(e);var t=s(37),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"说说你对缓存的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说说你对缓存的理解"}},[a._v("#")]),a._v(" 说说你对缓存的理解？")]),a._v(" "),t("ul",[t("li",[a._v("浏览器首次加载资源时，服务器返回200，此时浏览器会将资源下载下来，还会缓存response的header头部。")]),a._v(" "),t("li",[a._v("下一次加载资源时，首先进行强缓存处理，强缓存主要利用Cache-Control，Cache-Control常用的有：no-cache、no-store、max-age=xxx。Cache-Control为no-cache，则直接进入对比缓存；为no-store，则不缓存(强缓存，对比缓存都不触发)；max-age=xxx，则xxx秒内再次请求，使用强缓存，直接获取浏览器本地的缓存数据。")]),a._v(" "),t("li",[a._v("进入比对缓存时，如果使用Etag(响应header字段)与If-None-Match(请求header字段)，"),t("code",[a._v("If-None-Match")]),a._v("保存资源唯一标识，服务器对比If-None-Match与被请求资源的唯一标识，一致则说明未修改，响应http 304，告诉浏览器缓存，否则响应资源内容，状态码200。如果使用Last-Modified(响应header字段)与If-Modified-Since(请求header字段),"),t("code",[a._v("If-Modified-Since")]),a._v("保存资源最后修改时间，服务器对比If-Modified-Since与被请求资源的最后修改时间，一致则说明未修改，响应http 304，告诉浏览器缓存，否则响应资源内容，状态码200。")])]),a._v(" "),t("p",[a._v("Etag")]),a._v(" "),t("p",[t("img",{attrs:{src:s(466),alt:"Etag"}})]),a._v(" "),t("p",[a._v("If-None-Match")]),a._v(" "),t("p",[t("img",{attrs:{src:s(467),alt:"If-None-Match"}})]),a._v(" "),t("p",[a._v("Last-Modified")]),a._v(" "),t("p",[t("img",{attrs:{src:s(468),alt:"Last-Modified"}})]),a._v(" "),t("p",[a._v("If-Modified-Since")]),a._v(" "),t("p",[t("img",{attrs:{src:s(469),alt:"If-Modified-Since"}})]),a._v(" "),t("p",[a._v("当ETag和Last-Modified同时存在时，服务器先会检查ETag，然后再检查Last-Modified")]),a._v(" "),t("h2",{attrs:{id:"什么是from-disk-cache和from-memory-cache-什么时候会触发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是from-disk-cache和from-memory-cache-什么时候会触发"}},[a._v("#")]),a._v(" 什么是from disk cache和from memory cache ？什么时候会触发？")]),a._v(" "),t("p",[a._v("强缓存时会触发。")]),a._v(" "),t("ul",[t("li",[a._v("memory cache: 资源缓存在内存中，读取速度更快。关闭tab页面，内存缓存会被释放。")]),a._v(" "),t("li",[a._v("disk cache: 资源缓存在硬盘中，读取速度稍慢，容量大。")])]),a._v(" "),t("h2",{attrs:{id:"什么是启发式缓存-在什么条件下触发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是启发式缓存-在什么条件下触发"}},[a._v("#")]),a._v(" 什么是启发式缓存？在什么条件下触发？")]),a._v(" "),t("div",{staticClass:"language-http line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[a._v("// 响应头\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Age")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("23146")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Cache-Control")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("public")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("Tue, 28 Nov 2017 12:26:41 GMT")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Last-Modified")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("Tue, 28 Nov 2017 05:14:02 GMT")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Vary")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("Accept-Encoding")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("有人可能会说下次请求直接进入协商缓存阶段，携带If-Moified-Since呗，不是的，浏览器还有个启发式缓存阶段【响应中未显示Expires，Cache-Control：max-age或Cache-Control：s-maxage，并且响应中不包含其他有关缓存的限制】")]),a._v(" "),t("p",[a._v("根据响应头中2个时间字段 Date 和 Last-Modified 之间的时间差值，取其值的10%作为缓存时间周期。")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Date 减去 Last-Modified 值的 10% 作为缓存时间。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Date：创建报文的日期时间, Last-Modified 服务器声明文档最后被修改时间")]),a._v("\nresponse_is_fresh "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("（Date "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("  Last"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Modified"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参考："),t("a",{attrs:{href:"https://www.cnblogs.com/chenqf/p/6386163.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("彻底弄懂HTTP缓存机制及原理"),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);