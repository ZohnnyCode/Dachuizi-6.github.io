(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{381:function(t,s,e){},513:function(t,s,e){t.exports=e.p+"assets/img/1.7e0b09bb.png"},514:function(t,s,e){t.exports=e.p+"assets/img/2.23386deb.png"},515:function(t,s,e){t.exports=e.p+"assets/img/3.aabaf0db.png"},516:function(t,s,e){t.exports=e.p+"assets/img/4.8639b157.png"},517:function(t,s,e){t.exports=e.p+"assets/img/5.e3e6a5ca.png"},518:function(t,s,e){t.exports=e.p+"assets/img/6.c85090b4.png"},519:function(t,s,e){t.exports=e.p+"assets/img/8.95dfaad8.png"},520:function(t,s,e){t.exports=e.p+"assets/img/9.fd70ef3a.png"},521:function(t,s,e){t.exports=e.p+"assets/img/10.a43d1f5a.png"},522:function(t,s,e){t.exports=e.p+"assets/img/11.e1465d6d.png"},523:function(t,s,e){t.exports=e.p+"assets/img/12.2ccd7b3f.png"},524:function(t,s,e){t.exports=e.p+"assets/img/13.5a25c08a.png"},525:function(t,s,e){t.exports=e.p+"assets/img/14.9d30606f.png"},526:function(t,s,e){t.exports=e.p+"assets/img/15.dbde0e31.png"},527:function(t,s,e){"use strict";e(381)},732:function(t,s,e){"use strict";e.r(s);e(527);var a=e(37),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"说说浏览器的架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说说浏览器的架构"}},[t._v("#")]),t._v(" 说说浏览器的架构")]),t._v(" "),a("p",[t._v("Chrome浏览器包括："),a("code",[t._v("多进程架构")])]),t._v(" "),a("ol",[a("li",[t._v("浏览器主进程：界面显示，用户交互，子进程管理等")]),t._v(" "),a("li",[t._v("GPU进程：快速显示位图")]),t._v(" "),a("li",[t._v("网络进程：加载网络资源")]),t._v(" "),a("li",[t._v("渲染进程：HTML、CSS、JS的解析等")]),t._v(" "),a("li",[t._v("插件进程：运行插件。插件易崩溃，通过插件进程来隔离")])]),t._v(" "),a("p",[a("img",{attrs:{src:e(513),alt:"process"}}),t._v(" "),a("img",{attrs:{src:e(514),alt:"process"}})]),t._v(" "),a("p",[t._v("Chrome 浏览器右上角的“选项”菜单，选择“更多工具”子菜单，点击“任务管理器”")]),t._v(" "),a("h2",{attrs:{id:"进程和线程的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程的区别"}},[t._v("#")]),t._v(" 进程和线程的区别")]),t._v(" "),a("ol",[a("li",[t._v("进程是应用程序的实例，是存放代码，运行数据的环境")]),t._v(" "),a("li",[t._v("线程依赖进程而存在，一个进程可以有多个线程")]),t._v(" "),a("li",[t._v("进程中的线程共享数据，不同进程的数据是相互隔离的。当然可以通过 "),a("code",[t._v("管道")]),t._v(" "),a("code",[t._v("IPC")]),t._v(" 实现进程间的相互通信")]),t._v(" "),a("li",[t._v("进程中的任一线程出错，都会导致整个进程崩溃")]),t._v(" "),a("li",[t._v("进程关闭后，操作系统会回收进程所占用的内存")])]),t._v(" "),a("p",[a("code",[t._v("顺便说说")]),t._v("，Chrome浏览器从单进程 升级到 多进程的原因")]),t._v(" "),a("ol",[a("li",[t._v("不稳定：任一线程出错，整个进程崩溃")]),t._v(" "),a("li",[t._v("不流畅：容易造成页面卡顿。")]),t._v(" "),a("li",[t._v("不安全：插件，脚本可以获取浏览器系统权限\n"),a("img",{attrs:{src:e(515),alt:"process"}})])]),t._v(" "),a("p",[t._v("单进程浏览器架构示意图")]),t._v(" "),a("h2",{attrs:{id:"浏览器登录状态是如何保持的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器登录状态是如何保持的"}},[t._v("#")]),t._v(" 浏览器登录状态是如何保持的？")]),t._v(" "),a("ol",[a("li",[t._v("cookie")])]),t._v(" "),a("ul",[a("li",[t._v("提交用户信息(eg: 帐号密码)，服务器验证请求，并返回响应。")]),t._v(" "),a("li",[t._v("如果验证通过，则生成一个表示用户身份的字段串。并把字符串添加到响应头的"),a("code",[t._v("Set-Cookie")]),t._v("字段中")]),t._v(" "),a("li",[t._v("浏览器收到响应。解析响应头"),a("code",[t._v("response headers")]),t._v(", 如果遇到"),a("code",[t._v("Set-Cookie")]),t._v("字段，则到该字段写到浏览器本地的"),a("code",[t._v("Cookie")])]),t._v(" "),a("li",[t._v("浏览器再次访问，发起HTTP请求时，会自动把同源的Cookie，即之前保存的Cookie，添加到请求头"),a("code",[t._v("request headers")]),t._v("的"),a("code",[t._v("Cookie")]),t._v("字段")]),t._v(" "),a("li",[t._v("服务次收到请求后，根据请求头的cookie字段就可以判断用户是否是已登录状态\n"),a("img",{attrs:{src:e(516),alt:"cookie"}})])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("token\n登录成功后，服务端返回一个token，一般存放在"),a("code",[t._v("localStorage")]),t._v(", 再次发请求时，token放在请求头的"),a("code",[t._v("authorization")]),t._v("字段")])]),t._v(" "),a("h2",{attrs:{id:"什么情况下多个页面会同时运行在一个渲染进程中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下多个页面会同时运行在一个渲染进程中"}},[t._v("#")]),t._v(" 什么情况下多个页面会同时运行在一个渲染进程中？")]),t._v(" "),a("ol",[a("li",[t._v("Chrome默认每个标签 对应 一个渲染进程")]),t._v(" "),a("li",[t._v("A页面打开B页面 && A页面和B页面属于"),a("code",[t._v("同一站点")]),t._v("。那么B页面会复用A页面的渲染进程")])]),t._v(" "),a("p",[t._v("同一站点：根域名和协议相同")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tips")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://linkmarket.aliyun.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://linkmarket.aliyun.com"),a("OutboundLink")],1),t._v(" 内新开的标签页都是新开一个渲染进程\na 链接的 rel 属性值都使用了 "),a("code",[t._v("noopener")]),t._v(" 和 "),a("code",[t._v("noreferrer")])]),t._v(" "),a("ul",[a("li",[t._v("noopener: 告诉浏览器通过这个链接打开的标签页中的 opener 值设置为 null")]),t._v(" "),a("li",[t._v("noreferrer: 告诉浏览器，新打开的标签页不要有引用关系")])]),t._v(" "),a("img",{staticStyle:{width:"49%"},attrs:{src:e(517)}}),t._v(" "),a("img",{staticStyle:{width:"50%"},attrs:{src:e(518)}})]),t._v(" "),a("h2",{attrs:{id:"解析html的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析html的过程"}},[t._v("#")]),t._v(" 解析html的过程？")]),t._v(" "),a("p",[t._v("或者问：HTML、CSS、JS是如何变成页面的？")]),t._v(" "),a("p",[t._v("最新详细版："),a("RouterLink",{attrs:{to:"/browser/browser/url.html#解析html"}},[t._v("解析HTML")])],1),t._v(" "),a("h2",{attrs:{id:"时间线面板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间线面板"}},[t._v("#")]),t._v(" 时间线面板")]),t._v(" "),a("p",[a("img",{attrs:{src:e(519),alt:"time-board"}})]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Queuing")]),t._v("：排队。浏览器发起请求时，可能由于以下原因导致需要排队\n"),a("ul",[a("li",[t._v("资源有优先级：CSS, HTML, JS 比 图片, 视频, 音频优先")]),t._v(" "),a("li",[a("code",[t._v("HTTP/1.1中，Chrome 最多允许对同一个 域名 建立6个 TCP 连接")]),t._v("。超过6个，则会处于排队状态。解决方法：升级HTTP2，无此限制")]),t._v(" "),a("li",[t._v("网络进程在为数据分配磁盘空间时，新的 HTTP 请求也需要短暂地等待磁盘分配结束。")])])]),t._v(" "),a("li",[a("code",[t._v("Stalled")]),t._v(": 停滞。发起连接请求之前，一些原因导致连接过程被推迟。")]),t._v(" "),a("li",[a("code",[t._v("Initial connection/SSL")]),t._v("： 和服务器建立连接阶段。TCP连接时间 + SSL握手时间[如果使用HTTPS]")]),t._v(" "),a("li",[a("code",[t._v("Request sent")]),t._v(": 网络进程发送数据。此阶段非常快")]),t._v(" "),a("li",[a("code",[t._v("Waiting (TTFB)")]),t._v("：等待接收服务器第一个字节的时间。TTFB越短，服务器响应越快。")]),t._v(" "),a("li",[a("code",[t._v("Content Download")]),t._v("：从接收到第一个字节 到 接收到全部响应数据所用的时间。Content Download时间过久，解决方法：压缩，去掉代码中的注释等")])]),t._v(" "),a("h2",{attrs:{id:"async和defer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async和defer"}},[t._v("#")]),t._v(" async和defer")]),t._v(" "),a("ol",[a("li",[t._v("JS 会阻塞 DOM 解析")]),t._v(" "),a("li",[t._v("CSS不阻塞 JS 的加载，但 CSS 会阻塞 JS 的执行")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("问：HTML 解析器是等整个 HTML 文档加载完成之后开始解析的，还是随着 HTML 文档边加载边解析的？")]),t._v(" "),a("li",[t._v("答：HTML 解析器并不是等整个文档加载完成之后再解析的，而是网络进程加载了多少数据，HTML 解析器便解析多少数据。")])])]),t._v(" "),a("li",[a("code",[t._v("预解析")]),t._v("：当渲染引擎收到字节流之后，会开启一个"),a("code",[t._v("预解析线程")]),t._v("，用来分析 HTML 文件中包含的 JavaScript、CSS 等相关文件，解析到相关文件之后，预解析线程会提前下载这些文件")])]),t._v(" "),a("img",{staticStyle:{width:"100%"},attrs:{src:e(520)}}),t._v(" "),a("p",[t._v("解析DOM, 遇到一个没有任何属性的 script 标签，就会"),a("code",[t._v("暂停解析DOM")]),t._v("，先发送"),a("code",[t._v("网络请求")]),t._v("获取该 JS 脚本的代码内容，然后让 JS 引擎"),a("code",[t._v("执行")]),t._v("该代码")]),t._v(" "),a("img",{staticStyle:{width:"100%"},attrs:{src:e(521)}}),t._v(" "),a("img",{staticStyle:{width:"100%"},attrs:{src:e(522)}}),t._v(" "),a("p",[a("code",[t._v("async")]),t._v("标记的脚本文件一旦加载完成会立即执行。async标记的 JS 文件，加载完成后，可能HTML解析未完成，也可能已经完成了。")]),t._v(" "),a("img",{staticStyle:{width:"100%"},attrs:{src:e(523)}}),t._v(" "),a("p",[a("code",[t._v("defer")]),t._v("标记的脚本文件需要在"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/DOMContentLoaded_event",target:"_blank",rel:"noopener noreferrer"}},[t._v("DOMContentLoaded"),a("OutboundLink")],1),t._v("事件之前执行。defer标记的 JS 文件，加载完成后，如果HTML解析未完成，则"),a("code",[t._v("等待 HTML 解析完毕再执行 JS 代码")])]),t._v(" "),a("p",[t._v("如果脚本中没有操作DOM的相关代码，应该设置为异步加载。（async和defer都是异步加载脚本的）async标记的脚本文件一旦加载完成会立即执行，defer标记的脚本文件需要在DOMContentLoaded事件之前执行")]),t._v(" "),a("h2",{attrs:{id:"面试-说说async和defer的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试-说说async和defer的区别"}},[t._v("#")]),t._v(" 面试：说说async和defer的区别")]),t._v(" "),a("p",[t._v("答：async和defer都是异步加载 JS。当 JS 是独立脚本，可以设置为异步加载async或defer。")]),t._v(" "),a("ul",[a("li",[t._v("async标记的 JS 加载完成后，就执行。")]),t._v(" "),a("li",[t._v("defer标记的 JS 加载完成后，需等待HTML解析完成后，才执行")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tips")]),t._v(" "),a("p",[t._v("如果第三方服务商出现了一些小问题，比如延迟之类的，就会使得页面白屏。\n好在script提供了两种方式来解决上述问题，async和defer，这两个属性使得script都不会阻塞DOM的渲染")])]),t._v(" "),a("h2",{attrs:{id:"css如何影响首次加载的白屏时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css如何影响首次加载的白屏时间"}},[t._v("#")]),t._v(" css如何影响首次加载的白屏时间？")]),t._v(" "),a("p",[a("img",{attrs:{src:e(524),alt:"render"}}),t._v(" "),a("img",{attrs:{src:e(525),alt:"render"}})]),t._v(" "),a("h2",{attrs:{id:"显示器是怎么显示图像的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示器是怎么显示图像的"}},[t._v("#")]),t._v(" 显示器是怎么显示图像的")]),t._v(" "),a("p",[t._v("显示器的刷新频率一般是60HZ，即1s更新60次图片，图片是从显卡前缓冲区中取的。\n显示的作用是合成新的图像，并把图像保存在后缓冲区。\n一旦显卡把合成的图像写到后缓冲区中，系统就会让前缓存区和后缓冲区互换。")]),t._v(" "),a("p",[t._v("思想和 JS引擎垃圾回收机制中 "),a("RouterLink",{attrs:{to:"/basic/js/#垃圾数据是如何自动回收的"}},[t._v("新生代")]),t._v("的处理，基本一样。都有互换")],1),t._v(" "),a("h2",{attrs:{id:"web-worker运行在哪的-怎么理解js引擎单线程-却又能在web-worker中执行js。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-worker运行在哪的-怎么理解js引擎单线程-却又能在web-worker中执行js。"}},[t._v("#")]),t._v(" web worker运行在哪的，怎么理解js引擎单线程，却又能在web worker中执行js。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tips")]),t._v(" "),a("p",[t._v("Web Workers are a simple means for web content to run scripts in background threads. The worker thread can perform tasks without interfering with the user interface.\n--\x3e Web Workers是一个关于在web内容中跑脚本的后台线程的简单方法。工作线程可以在不干扰用户界面的同时执行任务")])]),t._v(" "),a("ul",[a("li",[t._v("web worker运行在浏览器中，是浏览器的一个子线程。"),a("code",[t._v("Web Worker 其实就是在渲染进程中开启的一个新线程，它的生命周期是和页面关联的")])]),t._v(" "),a("li",[t._v("worker子线程运行在 浏览器上。JS 单线程 通过 postMessage 和浏览器上的worker线程 通信. 这样在进行复杂操作的时候，就不会阻塞主线程了")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" worker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'worker.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nworker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zcl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听")]),t._v("\nworker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭worker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// worker.js")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" workerResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workerResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h2",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" service worker")]),t._v(" "),a("p",[a("img",{attrs:{src:e(526),alt:"service_worker"}})]),t._v(" "),a("ul",[a("li",[t._v("Service Worker 的主要功能就是"),a("code",[t._v("拦截请求和缓存资源")]),t._v(".")]),t._v(" "),a("li",[t._v("由于 Service Worker 还需要会为多个页面提供服务，所以还不能把 ServiceWorker 和单个页面绑定起来，要"),a("code",[t._v("运行在浏览器进程")]),t._v("中。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.yuque.com/u517947/auk4bs/yzhx9r",target:"_blank",rel:"noopener noreferrer"}},[t._v("语雀-笔记-极客时间：浏览器工作原理与实践"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000018130499",target:"_blank",rel:"noopener noreferrer"}},[t._v("css加载会造成阻塞吗"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://juejin.cn/post/6894629999215640583",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘鑫async和defer"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("async和defer"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://juejin.cn/post/6971451348227194894#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("初探Web Workers"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://juejin.cn/post/6844903729972396039#heading-19",target:"_blank",rel:"noopener noreferrer"}},[t._v("Service Worker"),a("OutboundLink")],1)])])}),[],!1,null,"52150c94",null);s.default=r.exports}}]);