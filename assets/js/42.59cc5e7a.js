(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{425:function(s,t,a){s.exports=a.p+"assets/img/2.b9469cd3.png"},426:function(s,t,a){s.exports=a.p+"assets/img/3.312b3c1e.png"},687:function(s,t,a){"use strict";a.r(t);var v=a(37),_=Object(v.a)({},(function(){var s=this,t=s.$createElement,v=s._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("h3",{attrs:{id:"数字类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数字类型"}},[s._v("#")]),s._v(" 数字类型")]),s._v(" "),v("p",[s._v("ECMAScript 中的 Number 类型使用 IEEE754 标准来表示整数和浮点数值。所谓 IEEE754 标准，全称 IEEE 二进制浮点数算术标准，这个标准定义了表示浮点数的格式等内容。")]),s._v(" "),v("p",[s._v("在 IEEE754 中，规定了四种表示浮点数值的方式：单精确度（32位）、双精确度（64位）、延伸单精确度、与延伸双精确度。像 ECMAScript 采用的就是双精确度，也就是说，会用 "),v("code",[s._v("64 位字节来储存一个浮点数")])]),s._v(" "),v("h3",{attrs:{id:"十进制-转-二进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十进制-转-二进制"}},[s._v("#")]),s._v(" 十进制 转 二进制")]),s._v(" "),v("p",[s._v("在JS内部所有的计算都是以二进制方式计算的。 所以运算 0.1+0.2 时要先把 0.1 和 0.2 从十进制转成二进制。")]),s._v(" "),v("p",[s._v("0.1转化成二进制的算法：")]),s._v(" "),v("ul",[v("li",[s._v("0.1*2=0.2======取出整数部分0")]),s._v(" "),v("li",[s._v("0.2*2=0.4======取出整数部分0")]),s._v(" "),v("li",[s._v("0.4*2=0.8======取出整数部分0")]),s._v(" "),v("li",[s._v("0.8*2=1.6======取出整数部分1")]),s._v(" "),v("li",[s._v("0.6*2=1.2======取出整数部分1\n接下来会无限循环")]),s._v(" "),v("li",[s._v("0.2*2=0.4======取出整数部分0")]),s._v(" "),v("li",[s._v("0.4*2=0.8======取出整数部分0")]),s._v(" "),v("li",[s._v("0.8*2=1.6======取出整数部分1")]),s._v(" "),v("li",[s._v("0.6*2=1.2======取出整数部分1")])]),s._v(" "),v("p",[s._v("所以0.1转化成二进制是：0.0001 1001 1001 1001......")]),s._v(" "),v("p",[s._v("0.2转化成二进制的算法：")]),s._v(" "),v("ul",[v("li",[s._v("0.2*2=0.4======取出整数部分0")]),s._v(" "),v("li",[s._v("0.4*2=0.8======取出整数部分0")]),s._v(" "),v("li",[s._v("0.8*2=1.6======取出整数部分1")]),s._v(" "),v("li",[s._v("0.6*2=1.2======取出整数部分1\n接下来会无限循环")]),s._v(" "),v("li",[s._v("0.2*2=0.4======取出整数部分0")]),s._v(" "),v("li",[s._v("0.4*2=0.8======取出整数部分0")]),s._v(" "),v("li",[s._v("0.8*2=1.6======取出整数部分1")]),s._v(" "),v("li",[s._v("0.6*2=1.2======取出整数部分1")])]),s._v(" "),v("p",[s._v("所以0.2转化成二进制是：0.0011 0011 0011 0011......")]),s._v(" "),v("p",[s._v("这里要注意 0.1 和 0. 2转成的二进制是无穷的。另外在现代浏览器中是用浮点数形式的二进制来存储二进制，所以还要把上面所转化的"),v("code",[s._v("二进制转成浮点数形式的二进制")])]),s._v(" "),v("h3",{attrs:{id:"二进制转成浮点数形式的二进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二进制转成浮点数形式的二进制"}},[s._v("#")]),s._v(" 二进制转成浮点数形式的二进制")]),s._v(" "),v("p",[s._v("双精度浮点数用1位表示符号位，11位表示指数位，52位表示小数位，如下图所示\n"),v("img",{attrs:{src:a(425),alt:"浮点数"}})]),s._v(" "),v("ul",[v("li",[s._v("符号位：正数为0，负数为1")]),s._v(" "),v("li",[s._v("指数位：阶数+偏移量。阶数是：2"),v("sup",[s._v("(e-1)")]),s._v("-1，e为阶码的位数；偏移量是把小数点移动到整数位只有11时移动的位数。正数表示向左移，负数表示向右移")]),s._v(" "),v("li",[s._v("小数位：即二进制小数点后面的数")])]),s._v(" "),v("p",[s._v("接下来把 0.1 转成的二进制 0.0001 1001 1001 1001...... 转成浮点数形式的二进制。")]),s._v(" "),v("p",[s._v("先要把小数点移动到整数位只有1，要向右移动4位，故偏移量为−4，通过指位数的计算公式2"),v("sup",[s._v("(11-1)")]),s._v("-1-4 = 1019，把 1019 转成二进制为1111111011，不够11位要补零，最终得出指位数为01111111011；")]),s._v(" "),v("p",[s._v("小数位为100110011001......，因为小数位只能保留52位，第53位为1故进1。\n转换结果如下图所示：\n"),v("img",{attrs:{src:a(426),alt:"浮点数"}})]),s._v(" "),v("h3",{attrs:{id:"浮点数相加"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数相加"}},[s._v("#")]),s._v(" 浮点数相加")]),s._v(" "),v("p",[s._v("先把阶码调整为相同")]),s._v(" "),v("p",[s._v("0.1 是 1.1001100110011…… * 2^-4，阶码是 -4，而 0.2 就是 1.10011001100110...* 2^-3，阶码是 -3，两个阶码不同，所以先调整为相同的阶码再进行计算，调整原则是小阶对大阶，也就是 0.1 的 -4 调整为 -3，对应变成 0.11001100110011…… * 2^-3")]),s._v(" "),v("p",[s._v("接下来是尾数计算:")]),s._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[s._v("  "),v("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1100110011001100110011001100110011001100110011001101")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1001100110011001100110011001100110011001100110011010")]),s._v("\n————————————————————————————————————————————————————————\n "),v("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0110011001100110011001100110011001100110011001100111")]),s._v("\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br")])]),v("p",[s._v("我们得到结果为 10.0110011001100110011001100110011001100110011001100111 * 2^-3")]),s._v(" "),v("p",[s._v("将这个结果处理一下，即结果规格化，变成 1.0011001100110011001100110011001100110011001100110011(1) * 2^-2")]),s._v(" "),v("p",[s._v("括号里的 1 意思是说计算后这个 1 超出了范围，所以要被舍弃了。")]),s._v(" "),v("p",[s._v("再然后是舍入，四舍五入对应到二进制中，就是 0 舍 1 入，因为我们要把括号里的 1 丢了，所以这里会进一，结果变成")]),s._v(" "),v("p",[s._v("1.0011001100110011001100110011001100110011001100110100 * 2^-2")]),s._v(" "),v("p",[s._v("本来还有一个溢出判断，因为这里不涉及，就不讲了。")]),s._v(" "),v("p",[s._v("所以最终的结果存成 64 位就是")]),s._v(" "),v("p",[s._v("0 01111111101 0011001100110011001100110011001100110011001100110100")]),s._v(" "),v("p",[s._v("将它转换为10进制数就得到 0.30000000000000004440892098500626")]),s._v(" "),v("p",[s._v("因为"),v("code",[s._v("两次存储时的精度丢失加上一次运算时的精度丢失")]),s._v("，最终导致了 0.1 + 0.2 !== 0.3")]),s._v(" "),v("p",[s._v("参数：https://github.com/mqyqingfeng/Blog/issues/155")]),s._v(" "),v("h2",{attrs:{id:"面试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#面试"}},[s._v("#")]),s._v(" 面试")]),s._v(" "),v("p",[s._v("问：0.1+0.2 等于 0.3吗？ 为什么不等于")]),s._v(" "),v("p",[s._v("答：不等于。因为 JS 是用64来保存 浮点数。1位存符号位，11位存指数位，剩下52位存小数位。而0.1 和 0.2 的二进制是 无限循环的。所以0.1、0.2转成浮点数的二进制时，会对52位后的二进制进行舍去(53位为1，进1；为0舍弃)。这是第一次精度丢失。0.1 和 0.2 浮点数二进制相加导致 溢出一个位。要进行舍弃。这是第二次精度丢失。由于以上两种"),v("code",[s._v("精度丢失")]),s._v("，所以0.1+0.2不等于0.3")]),s._v(" "),v("p",[s._v("问：“0.1+0.2不等于0.3会引起那些BUG？")]),s._v(" "),v("p",[s._v("答：")]),s._v(" "),v("ul",[v("li",[s._v("引起统计页面展示错乱的BUG，展示多个小数点")]),s._v(" "),v("li",[s._v("还有300.01优惠300元后，支付金额不足0.01元等类似的BUG")])]),s._v(" "),v("p",[s._v("问：怎么解决0.1+0.2不等于0.3这个问题? 请封装一个方式来解决精度问题")]),s._v(" "),v("p",[s._v("答：\n"),v("code",[s._v("Number.EPSILON")]),s._v("的实质是一个可以接受的最小误差范围. 如果误差能够小于Number.EPSILON，我们就可以认为结果是可靠的")]),s._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("equal")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("left"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Math"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("abs")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),v("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" right"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" Number"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),v("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EPSILON")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// equal(0.1-0.2, 0.1)")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// equal(0.1-0.2, -0.1)")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br"),v("span",{staticClass:"line-number"},[s._v("7")]),v("br")])])])}),[],!1,null,null,null);t.default=_.exports}}]);